name: CI/CD Wisecow

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted   # üëà your VM runner

    steps:
    # 1Ô∏è‚É£hCheckout repo
    - name: Checkout code
      uses: actions/checkout@v3

    # 2Ô∏è‚É£ g in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3Ô∏è‚É£ Build Docker image
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/wisecow:latest .

    # 4Ô∏è‚É£ Push Docker image
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/wisecow:latest

    # 5Ô∏è‚É£ Use existing kubeconfig (local VM already has access)
    - name: Use local kubeconfig
      run: |
        export KUBECONFIG=$HOME/.kube/config
        kubectl config current-context

    # 6Ô∏è‚É£ Deploy to Kubernetes
    - name: Deploy Wisecow to Kubernetes
      run: |
        kubectl apply -f ./k8s
        kubectl set image deployment/wisecow-deployment wisecow=${{ secrets.DOCKER_USERNAME }}/wisecow:latest
        kubectl rollout status deployment/wisecow-deployment

    - name: Create TLS secret
      run: |
        mkdir -p ./tls
        openssl req -x509 -nodes -days 365 \
          -newkey rsa:2048 \
          -keyout tls/wisecow.key \
          -out tls/wisecow.crt \
          -subj "/CN=wisecow.local/O=wisecow"
        kubectl create secret tls wisecow-tls --cert=tls/wisecow.crt --key=tls/wisecow.key --dry-run=client -o yaml | kubectl apply -f ./k8s/ingress.yaml
